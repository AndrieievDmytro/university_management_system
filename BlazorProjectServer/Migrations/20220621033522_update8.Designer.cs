// <auto-generated />
using System;
using BlazorProjectServer.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BlazorProjectServer.Migrations
{
    [DbContext(typeof(MainDbContext))]
    [Migration("20220621033522_update8")]
    partial class update8
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BlazorProjectServer.Models.Assignments", b =>
                {
                    b.Property<int>("AssignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AssignmentId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("MaxPoints")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("Points")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SubjectId")
                        .HasColumnType("integer");

                    b.HasKey("AssignmentId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Assignment", (string)null);
                });

            modelBuilder.Entity("BlazorProjectServer.Models.Attendanse", b =>
                {
                    b.Property<int>("AttendanseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AttendanseId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("IsPassed")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("StudentId")
                        .HasColumnType("integer");

                    b.HasKey("AttendanseId");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("Attendanse", (string)null);
                });

            modelBuilder.Entity("BlazorProjectServer.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CourseId"));

                    b.Property<string>("CourseDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CourseProgram")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CourseTag")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("IdPosition")
                        .HasColumnType("integer");

                    b.HasKey("CourseId");

                    b.HasIndex("IdPosition");

                    b.ToTable("Course", (string)null);
                });

            modelBuilder.Entity("BlazorProjectServer.Models.Position", b =>
                {
                    b.Property<int>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PositionId"));

                    b.Property<int>("HoursOfLecture")
                        .HasColumnType("integer");

                    b.Property<int>("HoursOfTutorials")
                        .HasColumnType("integer");

                    b.Property<DateTime>("InChairFrom")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("InChairTo")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PositionTypes")
                        .HasColumnType("text");

                    b.Property<int>("TutorId")
                        .HasColumnType("integer");

                    b.HasKey("PositionId");

                    b.HasIndex("HoursOfLecture");

                    b.HasIndex("TutorId")
                        .IsUnique();

                    b.ToTable("Position", (string)null);
                });

            modelBuilder.Entity("BlazorProjectServer.Models.Schedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ScheduleId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Room")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SubjectId")
                        .HasColumnType("integer");

                    b.HasKey("ScheduleId");

                    b.HasIndex("CourseId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Schedule", (string)null);
                });

            modelBuilder.Entity("BlazorProjectServer.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SubjectId"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Topics")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("SubjectId");

                    b.ToTable("Subject", (string)null);
                });

            modelBuilder.Entity("BlazorProjectServer.Models.Thesis", b =>
                {
                    b.Property<int>("ThesisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ThesisId"));

                    b.Property<int>("StudentId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ThesisId");

                    b.HasIndex("StudentId")
                        .IsUnique();

                    b.ToTable("Theses");
                });

            modelBuilder.Entity("BlazorProjectServer.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("BlazorProjectServer.Models.Student", b =>
                {
                    b.HasBaseType("BlazorProjectServer.Models.User");

                    b.Property<int>("CurrentSemester")
                        .HasColumnType("integer");

                    b.Property<string>("IdStudent")
                        .HasColumnType("text");

                    b.Property<long?>("Scholarship")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int>("StudentId")
                        .HasColumnType("integer");

                    b.Property<int>("ThesisId")
                        .HasColumnType("integer");

                    b.ToTable("Student", (string)null);
                });

            modelBuilder.Entity("BlazorProjectServer.Models.Tutor", b =>
                {
                    b.HasBaseType("BlazorProjectServer.Models.User");

                    b.Property<DateTime>("EmploymentDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ScientificTitle")
                        .HasColumnType("text");

                    b.Property<int>("TutoId")
                        .HasColumnType("integer");

                    b.ToTable("Tutor", (string)null);
                });

            modelBuilder.Entity("BlazorProjectServer.Models.Contract", b =>
                {
                    b.HasBaseType("BlazorProjectServer.Models.Tutor");

                    b.Property<DateTime>("ContractEndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ContractStartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("SalaryInContract")
                        .HasColumnType("bigint");

                    b.ToTable("ContractEmp", (string)null);
                });

            modelBuilder.Entity("BlazorProjectServer.Models.FullTime", b =>
                {
                    b.HasBaseType("BlazorProjectServer.Models.Tutor");

                    b.Property<int>("SalaryCoefficient")
                        .HasColumnType("integer");

                    b.ToTable("FullTimeEmp", (string)null);
                });

            modelBuilder.Entity("BlazorProjectServer.Models.PartTime", b =>
                {
                    b.HasBaseType("BlazorProjectServer.Models.Tutor");

                    b.Property<long>("SalaryPerHour")
                        .HasColumnType("bigint");

                    b.Property<int>("WorkingHours")
                        .HasColumnType("integer");

                    b.ToTable("PartTimeEmp", (string)null);
                });

            modelBuilder.Entity("BlazorProjectServer.Models.Assignments", b =>
                {
                    b.HasOne("BlazorProjectServer.Models.Subject", "Subject")
                        .WithMany("Assignments")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("BlazorProjectServer.Models.Attendanse", b =>
                {
                    b.HasOne("BlazorProjectServer.Models.Course", "Course")
                        .WithMany("Attendanses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorProjectServer.Models.Student", "Student")
                        .WithMany("Attendanses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("BlazorProjectServer.Models.Course", b =>
                {
                    b.HasOne("BlazorProjectServer.Models.Position", "Position")
                        .WithMany("Courses")
                        .HasForeignKey("IdPosition")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");
                });

            modelBuilder.Entity("BlazorProjectServer.Models.Position", b =>
                {
                    b.HasOne("BlazorProjectServer.Models.Tutor", "Tutor")
                        .WithOne("Position")
                        .HasForeignKey("BlazorProjectServer.Models.Position", "TutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tutor");
                });

            modelBuilder.Entity("BlazorProjectServer.Models.Schedule", b =>
                {
                    b.HasOne("BlazorProjectServer.Models.Course", "Course")
                        .WithMany("Schedules")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorProjectServer.Models.Subject", "Subject")
                        .WithMany("Schedules")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("BlazorProjectServer.Models.Thesis", b =>
                {
                    b.HasOne("BlazorProjectServer.Models.Student", "Student")
                        .WithOne("Thesis")
                        .HasForeignKey("BlazorProjectServer.Models.Thesis", "StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("BlazorProjectServer.Models.Student", b =>
                {
                    b.HasOne("BlazorProjectServer.Models.User", null)
                        .WithOne()
                        .HasForeignKey("BlazorProjectServer.Models.Student", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BlazorProjectServer.Models.Tutor", b =>
                {
                    b.HasOne("BlazorProjectServer.Models.User", null)
                        .WithOne()
                        .HasForeignKey("BlazorProjectServer.Models.Tutor", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BlazorProjectServer.Models.Contract", b =>
                {
                    b.HasOne("BlazorProjectServer.Models.Tutor", null)
                        .WithOne()
                        .HasForeignKey("BlazorProjectServer.Models.Contract", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BlazorProjectServer.Models.FullTime", b =>
                {
                    b.HasOne("BlazorProjectServer.Models.Tutor", null)
                        .WithOne()
                        .HasForeignKey("BlazorProjectServer.Models.FullTime", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BlazorProjectServer.Models.PartTime", b =>
                {
                    b.HasOne("BlazorProjectServer.Models.Tutor", null)
                        .WithOne()
                        .HasForeignKey("BlazorProjectServer.Models.PartTime", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BlazorProjectServer.Models.Course", b =>
                {
                    b.Navigation("Attendanses");

                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("BlazorProjectServer.Models.Position", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("BlazorProjectServer.Models.Subject", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("BlazorProjectServer.Models.Student", b =>
                {
                    b.Navigation("Attendanses");

                    b.Navigation("Thesis");
                });

            modelBuilder.Entity("BlazorProjectServer.Models.Tutor", b =>
                {
                    b.Navigation("Position");
                });
#pragma warning restore 612, 618
        }
    }
}
